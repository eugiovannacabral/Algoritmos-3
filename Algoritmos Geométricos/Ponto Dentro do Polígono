#include <iostream>
using namespace std;

struct ponto {
    int x, y;
};

// Retorna true se o ponto p está dentro do polígono
bool dentro_do_poligono(ponto pol[], int n, ponto p)
{
    int cont = 0;
    for (int i = 0; i < n; i++) 
	{
        ponto a = pol[i];
        ponto b = pol[(i + 1) % n]; // próximo vértice, com volta ao início

 // Checa se o ponto está entre os valores y dos dois vértices
        if ((a.y > p.y) != (b.y > p.y)) 
        {
            // Calcula a coordenada x onde a linha do ponto cruza a aresta
            double x_intersecao = (double)(b.x - a.x) * (p.y - a.y) / (b.y - a.y) + a.x;
            if (p.x < x_intersecao)
                cont++;
        }
    }
    return (cont % 2 == 1); // Se número de interseções for ímpar, está dentro
}

int main() {
    int n;
    cin >> n;
    ponto pol[n];

    for (int i = 0; i < n; i++) 
    {
        cin >> pol[i].x >> pol[i].y;
    }

    ponto p;
    cin >> p.x >> p.y;

    if (dentro_do_poligono(pol, n, p))
        cout << "DENTRO" << endl;
    else
        cout << "!(DENTRO)" << endl;

    return 0;
}
